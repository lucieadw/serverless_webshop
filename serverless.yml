# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: webshop


frameworkVersion: '2'


provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221


  stage: dev
  region: eu-central-1
  environment:
    PRODUCTS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PRODUCTS_TABLE}"

functions:
  getAll:
    handler: src/getAll.handler
    events:
      - http:
          path: products
          method: get
          cors: true

  create:
    handler: src/create.handler
    events:
      - http:
          path: products
          method: post
          cors: true

  get:
    handler: src/get.handler
    events:
      - http:
          path: products/{category}/{id}
          method: get
          cors: true

  getCategory:
    handler: src/getCategory.handler
    events:
      - http:
          path: products/{category}
          method: get
          cors: true

  delete:
    handler: src/delete.handler
    events:
      - http:
          path: products/{category}/{id}
          method: delete
          cors: true
  
  update:
    handler: src/update.handler
    events:
      - http:
          path: products/{category}/{id}
          method: put
          cors: true
          
  populate:
    handler: src/generator.populate
    timeout: 30
    events:
      - http:
          path: generator
          method: post
          cors: true

resources:
  Resources:
    Products:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: category
            AttributeType: S
          -
            AttributeName: productId
            AttributeType: S
        KeySchema:
          -
            AttributeName: category
            KeyType: HASH
          -
            AttributeName: productId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PRODUCTS_TABLE}
plugins:
  - serverless-plugin-typescript
